== CITES Checklist

== Code and Dependencies
Try to apply these coding guidelines:
  
  http://pub.cozmixng.org/~the-rwiki/rw-cgi.rb?cmd=view;name=RubyCodingConvention

Gems are packaged, following this article:

  http://ryan.mcgeary.org/2011/02/09/vendor-everything-still-applies/

CORS using a rack middleware:

  http://blog.carbonfive.com/2012/02/27/supporting-cross-domain-ajax-in-rails-using-jsonp-and-cors/

for now we use the rack-cors middleware for development, staging has the appropriate headers defined in Apache config:

  <VirtualHost *:80>
    Header set Access-Control-Allow-Origin *
    Header set Access-Control-Allow-Methods "POST, GET, OPTIONS"
    Header set Access-Control-Allow-Headers "X-Requested-With, X-Prototype-Version"
    Header set Access-Control-Max-Age 1728000
    ...

== Database

We use PostgreSQL 9.1 with the hstore extension. Unfortunately, lower versions don't seem to work with data modifying recursive CTEs.

The hstore extension needs to be installed separately from the contrib package.

Ubuntu:

  sudo apt-get install libpq-dev postgresql-9.1 postgresql-contrib-9.1


To load the module into your db in postgres >= 9.1:

  CREATE EXTENSION hstore

This is done in one of the migrations.

We're using a BTREE index on the hstore column in some places to be able to use hstore column in order by expressions:

  SELECT * FROM "taxon_concepts" ORDER BY (data -> 'some_hstore_col')

NOTE: we may use the polymorphic associations for references
Polymorphic associations are enhanced with this referential integrity pattern:
http://blog.metaminded.com/2010/11/25/stable-polymorphic-foreign-key-relations-in-rails-with-postgresql/
(hard copy in doc)

=== We are adding foreign_keys to the database by using the following gem:
  foreigner: https://github.com/matthuhiggins/foreigner

=== Importing data for development
  rake import:all 
This task loads the db seeds, and imports species, cites_regions, countries, distributions, cites listings and cites listing deletions, from files saved in lib/assets/files/.
There are specific tasks for each of the types of data. Run 'rake -T' to get the list of tasks.

== Taxonomic glossaries
  http://ibot.sav.sk/icbn/no%20frames/0120AppendixVII.htm
  http://bionomenclature-glossary.gbif.org/

== Project glossary

  - taxon concept: represents a unique combination of a name and a reference;
  - usage: represents an association of a taxon concept with a name (not necessarily the defining name). can be used to apply multiple name systems to a taxon concept;
  - rank: represents the taxonomic rank of a taxon concept. From kingdom to species. The rank model supports hierarchical relations between different ranks;
  - geo entity: represents any geographic entity from different types (through the geo entity type model);
  - geo relationship: gives support to relationships between geo entities. For instance a geo entity of type Region may contain multiple geo entities of type Country, this would be managed through a geo relationship of 'Contains'. Where the Region Contains the Countries;

An older standard for plants naming conventions (is there an up to date version of that?): http://www.nhm.ac.uk/hosted_sites/tdwg/plants.html

===Taxon concept relationships:

inter-designational:
  - equal =
  - includes <
  - included in >
  - overlaps ><
  - disjunct |

intra-designational:
  - synonym
  - homonym

=== Geographic Entities

==== Geographic Entity types
  - CITES Region
  - Region
  - Country
  - BRU
  - State
  - Special Administrative Region
  - Territory
  - Overseas Territory
  - Aquatic Territory

====Geo entities relationships (non-final list):
  - Contains
  - Intersects

=== CITES listing
CITES lists taxon concepts in appendices on various taxonomic levels. Practically, the highest rank at which taxa seem to be listed is order.

Example of explicit listing when taxa are listed at lower ranks:
* [SUBSPECIES] Boa constrictor occidentalis : *I* BOIDAE (Reptilia) (E) Argentine Boa Constrictor, (F) Boa constrictor occidental
* [SPECIES]  Boa constrictor : *II* BOIDAE (Reptilia) (E) Ampalagua, Boa Constrictor, Giboya, Masacuate, (S) Boa constrictor, (F) Boa constrictor
* [FAMILY] BOIDAE spp. : *II* (Reptilia) (E) Boas (S) Boas, (F) Boas


Implicit listing can be inferred for all taxon concepts in the hierarchy. It affects taxa that don't have explicit listing assigned as well as those that have one assigned, as listings can be carried over from lower taxa to higher and thus produce split listings.

Following the previous example, after we infer the listings we get:
* [SUBSPECIES] Boa constrictor occidentalis: *I* BOIDAE (Reptilia) (E) Argentine Boa Constrictor, (F) Boa constrictor occidental
* [SPECIES] Boa constrictor: *I/II* BOIDAE (Reptilia) (E) Ampalagua, Boa Constrictor, Giboya, Masacuate, (S) Boa constrictor, (F) Boa constrictor
* [GENUS omitted]
* [FAMILY] BOIDAE spp.: *I/II* (Reptilia) (E) Boas (S) Boas, (F) Boas

There goes another example to show the difference between explicit and implicit listing when taxa are listed at a higher rank:

Explicit listing:
* [GENUS] Chamaeleo spp.: *II* CHAMAELEONIDAE (Reptilia) (E) Chameleons, (S) Camaleónes, (F) Caméléons, Caméléons vrais

Implicit listing:
* [GENUS] Chamaeleo spp.: *II* CHAMAELEONIDAE (Reptilia) (E) Chameleons, (S) Camaleónes, (F) Caméléons, Caméléons vrais
* [SPECIES] Chamaeleo affinis: *II* CHAMAELEONIDAE (Reptilia) (E) Ethiopian Highland Chameleon, Rüppell's Desert Chameleon
* [SPECIES] Chamaeleo africanus: *II* CHAMAELEONIDAE (Reptilia) (E) African Chameleon, Sahel Chameleon, (S) Camaleón africano, (F) Caméléon africain
* [SPECIES] Chamaeleo etc

The current checklist is constructed like the implicit listing examples, with the additional rules that:
* it does not include subspecies unless they're listed explicitly
* it does not include taxa higher than species unless they're listed explicitly

So that's why the Boa genus is ommitted in the first example or any subspecies of the Chamaeleo in the second example.

Regarding the output, there is no substantial difference in how these lists are presented, except that obviously the explicit one is shorter.

==== Cases of split listing

1. on species level: populations listed separately: Loxodonta africana I/II, Caiman latirostris I/II
2. on species level: subspecies listed separately: Boa constrictor I/II
3. on genus level: species listed separately: Arctocephalus spp I/II
4. on family level: species listed separately: Lutrinae spp I/II, Tapiridae spp I/II
5. on order level: species listed separately: Acipenseriformes spp I/II

==== Cases of NC listing

1. some populations not listed: Panax ginseng II/NC, Antilocapra americana I/NC
2. taxon listed and some subtaxa not listed: Psittaciformes spp I/II/NC
3. taxon not listed and subtaxa not listed: Aloe vera NC, Pereskia NC
4. taxon not listed and subtaxa listed: Cervus elaphus I/II/III/NC, Axis porcinus I/NC
5. subtaxa deleted from appendices: ? cannot find clear example of that happening

==== Steps to calculate the current listing

These are the steps taken to calculate the current listing of a taxon concept:

1. For every taxon listed directly determine their current listing based on listing history.
   Note there may be a split listing case on species level (cases of split listing such that some populations are listed differently).

2. Traverse the taxonomic tree from the root down
   Cascade listings from higher taxa to lower, except for cases where a current listing is already present.

3. Traverse the tree from the leaves up
   Cascade listings for higher taxa (cases of split listing such that some subtaxa are listed differently).

==== Parameters that affect the current listing

There are three parameters that help resolve the listing status:
1. designation_id -- we need to check whether or not a taxon_concept belongs to the CITES taxonomy
2. not_in_cites -- there are cases of taxon concepts that are not listed, but still need to be present in the checklist.
   Examples:
   * Pereskia spp, Aloe vera -- entire subtrees excluded from the listing
   * Cervus elaphus, Axis porcinus -- species is excluded, but subspecies are listed
   Those will have the not_in_cites flag set and 'NC' appended to their listing.
3. fully_covered -- there are cases of taxon concepts that are listed, but some of their populations or descendants are not.
   Examples:
   * Panax ginseng, Antilocapra americana -- only certain populations listed
   * Psittaciformes spp -- some subtaxa not listed
   Those will have all_covered set to false and 'NC' appended to their current listing.

Note: the fully_covered flag could be inferred with a high degree of probability from other data. It should probably be false when:
* there are subspecies that do not belong to the designation
* there are population related comments in the listing changes
It makes sense to try to infer that. However, data incompleteness in the first case and inconsistent comment wording in the second case make it unreliable.
