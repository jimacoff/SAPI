== CITES Checklist

== Code and Dependencies
Try to apply these coding guidelines:
  
  http://pub.cozmixng.org/~the-rwiki/rw-cgi.rb?cmd=view;name=RubyCodingConvention

Gems are packaged, following this article:

  http://ryan.mcgeary.org/2011/02/09/vendor-everything-still-applies/

CORS using a rack middleware:

  http://blog.carbonfive.com/2012/02/27/supporting-cross-domain-ajax-in-rails-using-jsonp-and-cors/

for now we use the rack-cors middleware for development, staging has the appropriate headers defined in Apache config:

  <VirtualHost *:80>
    Header set Access-Control-Allow-Origin *
    Header set Access-Control-Allow-Methods "POST, GET, OPTIONS"
    Header set Access-Control-Allow-Headers "X-Requested-With, X-Prototype-Version"
    Header set Access-Control-Max-Age 1728000
    ...

== Database

We use PostgreSQL with the hstore extension. The extension needs to be installed separately from the contrib package.

Ubuntu:

  sudo apt-get install postgresql-contrib-9.1

(make sure the version matches your installation)

We're using a BTREE index on the hstore column in some places to be able to use hstore column in order by expressions:

  SELECT * FROM "taxon_concepts" ORDER BY (data -> 'some_hstore_col')

NOTE: we may use the polymorphic associations for references
Polymorphic associations are enhanced with this referential integrity pattern:
http://blog.metaminded.com/2010/11/25/stable-polymorphic-foreign-key-relations-in-rails-with-postgresql/
(hard copy in doc)

=== We are adding foreign_keys to the database by using the following gem:
  foreigner: https://github.com/matthuhiggins/foreigner

=== Importing data for development
  FILE=lib/assets/files/20_animal_species.csv rake import:species

== Taxonomic glossaries
  http://ibot.sav.sk/icbn/no%20frames/0120AppendixVII.htm
  http://bionomenclature-glossary.gbif.org/

== Project glossary

  - taxon concept: represents a unique combination of a name and a reference;
  - usage: represents an association of a taxon concept with a name (not necessarily the defining name). can be used to apply multiple name systems to a taxon concept;
  - rank: represents the taxonomic rank of a taxon concept. From kingdom to species. The rank model supports hierarchical relations between different ranks;
  - geo entity: represents any geographic entity from different types (through the geo entity type model);
  - geo relationship: gives support to relationships between geo entities. For instance a geo entity of type Region may contain multiple geo entities of type Country, this would be managed through a geo relationship of 'Contains'. Where the Region Contains the Countries;

An older standard for plants naming conventions (is there an up to date version of that?): http://www.nhm.ac.uk/hosted_sites/tdwg/plants.html

===Taxon concept relationships:

inter-designational:
  - equal =
  - includes <
  - included in >
  - overlaps ><
  - disjunct |

intra-designational:
  - synonym
  - homonym

=== Geographic Entities

==== Geographic Entity types
  - CITES Region
  - Region
  - Country
  - BRU
  - State
  - Special Administrative Region
  - Territory
  - Overseas Territory
  - Aquatic Territory

====Geo entities relationships (non-final list):
  - Contains
  - Intersects
